[{"prefix":"ng-pipe-uppercase","description":"Uppercase pipe","types":"typescript, html","body":["{{ ${variable} | uppercase }}$0"]},{"prefix":"ng-pipe-lowercase","description":"Lowercase pipe","types":"typescript, html","body":["{{ ${variable} | lowercase }$0"]},{"prefix":"ng-pipe-titlecase","description":"v4: TitlecaseÂ pipe","types":"typescript, html","body":["{{ ${variable} | titlecase }$0"]},{"prefix":"ng-pipe-date","description":"Date pipe - Default format: 09/15/1971","types":"typescript, html","body":["{{ ${variable} | date }}$0"]},{"prefix":"ng-pipe-date-custom","description":"Date pipe - Format: \"MM/dd/yy\" = 09/15/71","types":"typescript, html","body":["{{ ${variable} | date:\"MM/dd/yy\" }}$0"]},{"prefix":"ng-pipe-date-short","description":"Short date pipe - Format: 09/15/1971","types":"typescript, html","body":["{{ ${variable} | date:shortDate }}$0"]},{"prefix":"ng-pipe-date-full","description":"Full date pipe - Format: Wednesday, September 15, 1971","types":"typescript, html","body":["{{ ${variable} | date:fullDate }}$0"]},{"prefix":"ng-pipe-percent","description":"Percent pipe - Usage: number_expression &#x7c; percent[:digitInfo]","types":"typescript, html","body":["{{ ${variable} | percent:${digitInfo} }}$0"]},{"prefix":"ng-pipe-decimal","description":"Decimal pipe - Usage: number_expression &#x7c; decimal[:digitInfo]","types":"typescript, html","body":["{{ ${variable} | decimal:${digitInfo} }}$0"]},{"prefix":"ng-pipe-slice","description":"Slice pipe - Usage: array_or_string_expression &#x7c; slice:start[:end]","types":"typescript, html","body":["{{ ${variable} | slice:${start}:${end} }}$0"]},{"prefix":"ng-pipe-currency","description":"Currency pipe - Usage: money &#x7c; currency:'EUR'","types":"typescript, html","body":["{{ ${variable} | currency:'${CURRENCY}' }}$0"]},{"prefix":"ng-pipe-json","description":"Json pipe - Usage: object &#x7c; json","types":"typescript, html","body":["{{ ${object} | json }}$0"]},{"prefix":"ng-pipe-async","description":"Async pipe - Usage: observable_or_promise_expression &#x7c; async","types":"typescript, html","body":["{{ ${observable} | async }}$0"]},{"prefix":"ng-router-link","description":"Router link","types":"typescript, html","body":["<a [routerLink]=\"[ '/${path}', ${routeParam} ]\">${name}</a>$0"]},{"prefix":"ng-router-attribute","description":"Router link","types":"typescript, html","body":["[routerLink]=\"[ '/${path}', ${routeParam} ]\"$0"]},{"prefix":"ng-router-linkActive","description":"Router active link","types":"typescript, html","body":["<a [routerLink]=\"[ '/${path}' ]\" routerLinkActive=\"active\">${name}</a>$0"]},{"prefix":"ng-router-outlet","description":"Router outlet element","types":"typescript, html","body":["<router-outlet></router-outlet>","$0"]},{"prefix":"ng-router-outlet-name","description":"Router outlet element with name","types":"typescript, html","body":["<router-outlet name=\"${name}\"></router-outlet>","$0"]},{"prefix":"ng-route-guard-canactivate","description":"CanActivate Guard Route","types":"typescript, html","body":["import { Injectable } from '@angular/core';","import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';","import { Observable } from 'rxjs/Observable';","","@Injectable()","export class ${CanActivate}Guard implements CanActivate {","\tcanActivate(","\t\troute: ActivatedRouteSnapshot,","\t\tstate: RouterStateSnapshot","\t): Observable<boolean> | Promise<boolean> | boolean {","\t\treturn true;$0","\t}","}",""]},{"prefix":"ng-route-guard-canactivatechild","description":"CanActivateChild Route","types":"typescript, html","body":["import { Injectable } from '@angular/core';","import { CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';","import { Observable } from 'rxjs/Observable';","","@Injectable()","export class ${CanActivateChild}Guard implements CanActivateChild {","\tcanActivateChild(","\t\troute: ActivatedRouteSnapshot,","\t\tstate: RouterStateSnapshot","\t): Observable<boolean> | Promise<boolean> | boolean {","\t\treturn true;$0","\t}","}",""]},{"prefix":"ng-route-guard-resolve","description":"Resolve Guard Route","types":"typescript, html","body":["import { Injectable } from '@angular/core';","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';","import { Observable } from 'rxjs/Observable';","","@Injectable()","export class ${Resolve}Guard implements Resolve<${T}> {","\tresolve(","\t\troute: ActivatedRouteSnapshot,","\t\tstate: RouterStateSnapshot","\t): Observable<any> | Promise<any> | any {","\t\treturn true;$0","\t}","}",""]},{"prefix":"ng-route-guard-canload","description":"CanLoad Guard Route","types":"typescript, html","body":["import { Injectable } from '@angular/core';","import { CanLoad, Route } from '@angular/router';","import { Observable } from 'rxjs/Observable';","","@Injectable()","export class ${CanLoad}Guard implements CanLoad {","\tcanLoad(","\t\t${route}: Route","\t): Observable<boolean> | Promise<boolean> | boolean {","\t\treturn true;$0","\t}","}",""]},{"prefix":"ng-route-guard-candeactivate","description":"CanDeactivate Guard Route","types":"typescript, html","body":["import { Injectable } from '@angular/core';","import { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';","import { Observable } from 'rxjs/Observable';","","@Injectable()","export class ${CanDeactivate}Guard implements CanDeactivate<${T}> {","\tcanDeactivate(","\t\tcomponent: ${T},","\t\troute: ActivatedRouteSnapshot,","\t\tstate: RouterStateSnapshot","\t): Observable<boolean> | Promise<boolean> | boolean {","\t\treturn true;$0","\t}","}",""]},{"prefix":"ng-if","description":"If directive: *ngIf=\"expression\"","types":"typescript, html","body":["*ngIf=\"${expression}\""]},{"prefix":"ng-if-else","description":"v4: If else directive: *ngIf=\"expression; else\"","types":"typescript, html","body":["<ng-container *ngIf=\"${expression}; else ${elseTemplate}\">","\t$1","</ng-container>","<ng-template #${elseTemplate}>","\t$2","</ng-template>","$0"]},{"prefix":"ng-if-then-else","description":"v4: If then else directive: *ngIf=\"expression; then; else\"","types":"typescript, html","body":["<ng-container *ngIf=\"${expression}; then ${thenTemplate}; else ${elseTemplate}\"></ng-container>","<ng-template #${thenTemplate}>","\t$1","</ng-template>","<ng-template #${elseTemplate}>","\t$2","</ng-template>","$0"]},{"prefix":"ng-for","description":"For-loop directive","types":"typescript, html","body":["*ngFor=\"let ${item} of ${items}\"$0"]},{"prefix":"ng-for-li","description":"For-loop directive with li element","types":"typescript, html","body":["<li *ngFor=\"let ${item} of ${items}\">$0</li>"]},{"prefix":"ng-for-index","description":"For-loop directive with index","types":"typescript, html","body":["*ngFor=\"let ${item} of ${items}; let i=index\"$0"]},{"prefix":"ng-for-trackBy","description":"For-loop directive with trackBy","types":"typescript, html","body":["*ngFor=\"let ${item} of ${items}; trackBy:${item}.id\"$0"]},{"prefix":"ng-class","description":"CSS class","types":"typescript, html","body":["[ngClass]=\"{'${class}': ${true}}\"$0"]},{"prefix":"ng-style","description":"CSS style","types":"typescript, html","body":["[ngStyle]=\"{'${property}': ${expression}}\"$0"]},{"prefix":"ng-switch","description":"Switch template","types":"typescript, html","body":["<span [ngSwitch]=\"\">","<p *ngSwitchCase=\"true\">","","</p>","<p *ngSwitchCase=\"false\">","","</p>","<p *ngSwitchDefault>","","</p>","</span>"]},{"prefix":"ng-property","description":"Property: [property]=\"expression\"","types":"typescript, html","body":["[${property}]=\"${expression}\"$0"]},{"prefix":"ng-event","description":"Event: (event) = \"onEvent()\"","types":"typescript, html","body":["(${event}) = \"on${Event}()\"$0"]},{"prefix":"ng-binding-oneway","description":"Property: [property]=\"expression\"","types":"typescript, html","body":["[${property}]=\"${expression}\"$0"]},{"prefix":"ng-binding-twoway","description":"Two-way data binding with the NgModel","types":"typescript, html","body":["[(ngModel)]=\"${Name}\"$0"]},{"prefix":"ng-interpolation","description":"Interpolation: {{ interpolation }}","types":"typescript, html","body":["{{ ${interpolation} }}$0"]},{"prefix":"ng-repeat","description":"Use ngFor instead.","types":"typescript, html","body":["*ngFor=\"let ${item} of ${items}\"$0"]},{"prefix":"ng-click","description":"Click event","types":"typescript, html","body":["(click)=\"${expression}\"$0"]},{"prefix":"ng-show","description":"Usage: Bind to the hidden property.","types":"typescript, html","body":["[hidden]=\"!${expression}\"$0"]},{"prefix":"ng-hide","description":"Usage: Bind to the hidden property.","types":"typescript, html","body":["[hidden]=\"${expression}\"$0"]},{"prefix":"ng-href","description":"Usage: Bind to the href property.","types":"typescript, html","body":["[href]=\"${url}\"$0"]},{"prefix":"ng-src","description":"Usage: Bind to the src property.","types":"typescript, html","body":["[src]=\"${url}\"$0"]},{"prefix":"ng-orderBy","description":"For performance reasons, no comparable pipe exists in Angular 2. Instead, use component code to order or sort results. If you need the same ordering or sorting code in several templates, consider building a custom pipe.","types":"typescript, html","body":["$0"]},{"prefix":"ng-filter","description":"For performance reasons, no comparable pipe exists in Angular 2. Do all your filtering in the component. If you need the same filtering code in several templates, consider building a custom pipe.","types":"typescript, html","body":["$0"]},{"prefix":"ng-button-submit","description":"A submit button element with a click event","types":"typescript, html","body":["<button type=\"submit\">${Submit}</button>","$0"]},{"prefix":"ng-button","description":"A button element with a click event","types":"typescript, html","body":["<button (click)=\"${onClick()}\">${name}</button>","$0"]},{"prefix":"ng-import","description":"import module or component from path;","types":"typescript, html","body":["import { ${2:moduleOrComponent} } from '${1:path}';","$0"]},{"prefix":"ng-http-get","description":"Http observable get request","types":"typescript, html","body":["this.http.get('${url}')","\t.map((res: Response) => {","\t\tres.json();","})$0"]},{"prefix":"ng-httpClient-get","description":"HttpClient observable get request","types":"typescript, html","body":["this.http.get('${url}')$0"]},{"prefix":"ng-http-get-post","description":"Http observable get & post request","types":"typescript, html","body":["get${Type}(): Observable<I${Type}[]> {","\treturn this.http.get(${name})","\t\t.map((res: Response) => <I${Type}[]>res.json())","\t\t.catch(this.handleError);","}","","add${Type}(${name}: string): Observable<I${Type}> {","\tlet body = JSON.stringify({ ${name} });","\tlet headers = new Headers({ 'Content-Type': 'application/json'});","\tlet options = new RequestOptions({ headers: headers });","","\treturn this.http.post(this.${url}, body, options)","\t\t.map(this.handleResponse)","\t.catch(this.handleError);","}","private handleError(error: Response) {","\tconsole.error(error);","\treturn Observable.throw(error.json().error || 'Server error');","}","$0"]},{"prefix":"ng-debug","description":"pre obj pipe json","types":"typescript, html","body":["<pre>{{ ${obj} | json }}</pre>$0"]},{"prefix":"ng-debug-async","description":"pre obj pipe async pipe json","types":"typescript, html","body":["<pre>{{ ${obj} | async | json }}</pre>$0"]},{"prefix":"ng-fx-import","description":"Flex Layout Import","types":"typescript, html","body":["import { FlexLayoutModule } from '@angular/flex-layout';","// Add ${FlexLayoutModule.forRoot()} to the @NgModule imports section"]},{"prefix":"ng-fx-row","description":"Flex Layout Row","types":"typescript, html","body":["<div fxLayout=\"row\" fxLayoutAlign=\"${start|center|end|space-around|space-between} ${start|center|end|stretch}\" fxLayoutGap=\"${gap}px\">","\t$0","</div>"]},{"prefix":"ng-fx-layout","description":"Flex Layout Property","types":"typescript, html","body":["fxLayout=\"row\"$0"]},{"prefix":"ng-fx-layout-align","description":"Flex Layout Align Property","types":"typescript, html","body":["fxLayoutAlign=\"${start|center|end|space-around|space-between} ${start|center|end|stretch}\"$0"]},{"prefix":"ng-fx-layout-gap","description":"Flex Layout Gap Property","types":"typescript, html","body":["fxLayoutGap=\"${gap}px\"$0"]},{"prefix":"ng-fx-row-reverse","description":"Flex Layout Reverse Row","types":"typescript, html","body":["<div fxLayout=\"row-reverse\" fxLayoutAlign=\"${start|center|end|space-around|space-between} ${start|center|end|stretch}\" fxLayoutGap=\"${gap}px\">","\t$0","</div>"]},{"prefix":"ng-fx-col","description":"Flex Layout Column","types":"typescript, html","body":["<div fxLayout=\"column\" fxLayoutAlign=\"${start|center|end|space-around|space-between} ${start|center|end|stretch}\" fxLayoutGap=\"${gap}px\">","\t$0","</div>"]},{"prefix":"ng-fx-col-reverse","description":"Flex Layout Reverse Column","types":"typescript, html","body":["<div fxLayout=\"column-reverse\" fxLayoutAlign=\"${start|center|end|space-around|space-between} ${start|center|end|stretch}\" fxLayoutGap=\"${gap}px\">","\t$0","</div>"]},{"prefix":"ng-fx-item","description":"Flex Layout Item","types":"typescript, html","body":["<div fxFlex=\"${value}%\">","\t$0","</div>"]},{"prefix":"ng-fx-item-offset","description":"Flex Layout Item with fxFlexOffset","types":"typescript, html","body":["<div fxFlex=\"${value}%\" fxFlexOffset=\"${offset}px\">","\t$0","</div>"]},{"prefix":"ng-fx-item-order","description":"Flex Layout Item with fxFlexOrder","types":"typescript, html","body":["<div fxFlex=\"${value}%\" fxFlexOrder=\"${order}\">","\t$0","</div>"]},{"prefix":"ng-fx-item-align","description":"Flex Layout Item with fxFlexAlign","types":"typescript, html","body":["<div fxFlex=\"${value}%\" fxFlexAlign=\"${start|baseline|center|end}\">","\t$0","</div>"]},{"prefix":"ng-fx-item-fill","description":"Flex Layout Item with fxFlexFill","types":"typescript, html","body":["<div fxFlex=\"${value}%\" fxFlexFill>","\t$0","</div>"]},{"prefix":"m-toolbar","description":"Material toolbar","types":"typescript, html","body":["<mat-toolbar>","\t<span>${FirstRow}</span>","</mat-toolbar>$0"]},{"prefix":"m-toolbar-row","description":"Material toolbar row","types":"typescript, html","body":["<mat-toolbar-row>","\t<span>${FirstRow}</span>","</mat-toolbar-row>$0"]},{"prefix":"m-toolbar-multiRow","description":"Material Toolbar with multiple rows","types":"typescript, html","body":["<mat-toolbar>","\t<span>${FirstRow}</span>","\t<mat-toolbar-row>","\t\t<span>${SecondRow}</span>","\t</mat-toolbar-row>","\t<mat-toolbar-row>","\t\t<span>${ThirdRow}</span>","\t</mat-toolbar-row>","</mat-toolbar>$0"]},{"prefix":"m-icon-fontawesome","description":"Material Font Awesome Icon","types":"typescript, html","body":["<mat-icon mat-font-icon=\"fa-${icon}\" class=\"fa\"></mat-icon>$0"]},{"prefix":"m-button","description":"Rectangular Material button w/ no elevation.","types":"typescript, html","body":["<button mat-button>${text}</button>$0"]},{"prefix":"m-button-raised","description":"Rectangular Material button w/ elevation.","types":"typescript, html","body":["<button mat-raised-button>${text}</button>$0"]},{"prefix":"m-button-icon","description":"Circular Material button with a transparent background","types":"typescript, html","body":["<button mat-icon-button>%{text}</button>$0"]},{"prefix":"m-button-fab","description":"Circular button w/ elevation.","types":"typescript, html","body":["<button mat-fab><mat-icon>${icon_name}</mat-icon></button>$0"]},{"prefix":"m-button-fab-mini","description":"Small circular button w/ elevation.","types":"typescript, html","body":["<button mat-fab-mini><mat-icon>${icon_name}</mat-icon></button>$0"]},{"prefix":"m-button-toggle","description":"Material toggle button","types":"typescript, html","body":["<mat-button-toggle>${text}</mat-button-toggle>$0"]},{"prefix":"m-card","description":"Material Basic Card","types":"typescript, html","body":["<mat-card>","\t$1","</mat-card>$0"]},{"prefix":"m-radiobutton","description":"Material Radio Button","types":"typescript, html","body":["<mat-radio-group>","\t<mat-radio-button value=\"${value1}\">${Option1}</mat-radio-button>","\t<mat-radio-button value=\"${value2}\">${Option2}</mat-radio-button>","</mat-radio-group>$0"]},{"prefix":"m-radiobutton-option","description":"Material Radio Button Option","types":"typescript, html","body":["<mat-radio-button value=\"${value}\">${Option}</mat-radio-button>$0"]},{"prefix":"m-checkbox","description":"Material Checkbox","types":"typescript, html","body":["<mat-checkbox>${text}</mat-checkbox>$0"]},{"prefix":"m-datepicker","description":"Material Datepicker","types":"typescript, html","body":["<mat-form-field>","\t<input mdInput [mdDatepicker]=\"${picker}\" placeholder=\"${title}\">","\t\t<button mdSuffix [mdDatepickerToggle]=\"${picker}\"></button>","\t</mat-form-field>","<mat-datepicker #${picker}></mat-datepicker>$0"]},{"prefix":"m-input","description":"Material Input Textbox","types":"typescript, html","body":["<mat-form-field>","\t<input mdInput placeholder=\"${label}\" value=\"${value}\">","</mat-form-field>$0"]},{"prefix":"m-chip-list","description":"Material Chip List","types":"typescript, html","body":["<mat-chip-list>","\t<mat-chip>${text}<mat-chip>","</mat-chip-list>$0"]},{"prefix":"m-chip-list-stacked","description":"Material Chip Stacked List","types":"typescript, html","body":["<mat-chip-list class=\"mat-chip-list-stacked\">","\t<mat-chip>${text}<mat-chip>","</mat-chip-list>$0"]},{"prefix":"m-chip","description":"Material Chip","types":"typescript, html","body":["<mat-chip>${text}<mat-chip>$0"]},{"prefix":"m-select","description":"Material Select","types":"typescript, html","body":["<mat-select placeholder=\"${Placeholder}\" [(ngModel)]=\"selectedValue\" name=\"${item}\">","\t<mat-option *ngFor=\"let ${item} of ${items}\" [value]=\"${item}.value\">","\t\t{{${item}.viewValue}}","\t</mat-option>","</mat-select>$0"]},{"prefix":"m-icon-svg","description":"Material SVG Icon","types":"typescript, html","body":["<mat-icon svgIcon=\"${src}\"></mat-icon>$0"]},{"prefix":"m-slide-toggle","description":"Material Slide toggle","types":"typescript, html","body":["<mat-slide-toggle>${text}</mat-slide-toggle>$0"]},{"prefix":"m-slider","description":"Material Slider","types":"typescript, html","body":["<mat-slider min=\"${min}\" max=\"${max}\" step=\"${step}\" value=\"${value}\"></mat-slider>$0"]},{"prefix":"m-slider-vertical","description":"Material Vertical Slider","types":"typescript, html","body":["<mat-slider vertical min=\"${min}\" max=\"${max}\" step=\"${step}\" value=\"${value}\"></mat-slider>$0"]},{"prefix":"m-slider-thumbLabel","description":"Material Slider thumbLabel","types":"typescript, html","body":["<mat-slider thumbLabel tickInterval=\"${interval}\"></mat-slider>$0"]},{"prefix":"m-slider-tickInterval","description":"Material Slider tickInterval","types":"typescript, html","body":["<mat-slider step=\"${step}\" tickInterval=\"${interval}\"></mat-slider>$0"]},{"prefix":"m-slider-tickInterval-auto","description":"Material Slider tickInterval Auto","types":"typescript, html","body":["<mat-slider tickInterval=\"auto\"></mat-slider>$0"]},{"prefix":"m-list","description":"Material List","types":"typescript, html","body":["<mat-list>","\t<mat-list-item>${item}</mat-list-item>$1","</mat-list>$0"]},{"prefix":"m-list-ngfor","description":"Material List ngFor","types":"typescript, html","body":["<mat-list>","\t<mat-list-item *ngFor=\"let ${item} of ${items}\">{{ ${item} }}</mat-list-item>$1","</mat-list>$0"]},{"prefix":"m-list-item","description":"Material List Item","types":"typescript, html","body":["<mat-list-item>${item}</mat-list-item>$0"]},{"prefix":"m-tab-group","description":"Material Tab Group","types":"typescript, html","body":["<mat-tab-group>","\t<mat-tab label=\"${TabHeader1}\">$1</mat-tab>","\t<mat-tab label=\"${TabTabHeader2}\">$2</mat-tab>","</mat-tab-group>$0"]},{"prefix":"m-tab","description":"Material Tab","types":"typescript, html","body":["<mat-tab label=\"${TabHeader}\">$1</mat-tab>$0"]},{"prefix":"m-tooltip","description":"Material Tooltip","types":"typescript, html","body":["mdTooltip=\"${text}\"$0"]},{"prefix":"m-tooltip-position","description":"Material Tooltip position","types":"typescript, html","body":["[mdTooltipPosition]=\"${above|below|left|right|before|after}\"$0"]},{"prefix":"m-tooltip-with-position","description":"Material Tooltip with position","types":"typescript, html","body":["mdTooltip=\"${text}\" [mdTooltipPosition]=\"${above|below|left|right|before|after}\"$0"]},{"prefix":"m-table","description":"Material Table","types":"typescript, html","body":["<mat-table #table [dataSource]=\"${dataSource}\">","\t<ng-container cdkColumnDef=\"${column}\">","\t\t<mat-header-cell *cdkHeaderCellDef> ${header} </mat-header-cell>","\t\t<mat-cell *cdkCellDef=\"let row\"> {{row.${column}}} </mat-cell>","\t</ng-container>","</mat-table>$0"]},{"prefix":"m-table-column","description":"Material Table Column","types":"typescript, html","body":["<ng-container cdkColumnDef=\"${column}\">","\t<mat-header-cell *cdkHeaderCellDef> ${header} </mat-header-cell>","\t<mat-cell *cdkCellDef=\"let row\"> {{row.${column}}} </mat-cell>","</ng-container>$0"]},{"prefix":"m-grid-list","description":"Material Grid List","types":"typescript, html","body":["<mat-grid-list cols=\"${cols}\" rowHeight=\"${height}px\">","\t<mat-grid-tile","\t\t*ngFor=\"let ${tile} of ${tiles}\"","\t\t[colspan]=\"${tile}.cols\"","\t\t[rowspan]=\"${tile}.rows\"","\t\t{{${tile}.text}}","\t</mat-grid-tile>","</mat-grid-list>$0"]},{"prefix":"m-paginator","description":"Material Paginator","types":"typescript, html","body":["<mat-paginator [length]=\"${length}\"","\t[pageSize]=\"${pageSize}\"","\t[pageSizeOptions]=\"${pageSizeOptions}\"","\t(page)=\"pageEvent = $${event}\">","</mat-paginator>$0"]},{"prefix":"m-spinner","description":"Material Determinate Spinner","types":"typescript, html","body":["<mat-spinner","\t[value]=\"${value}\">","</mat-spinner>$0"]},{"prefix":"m-expansion-panel","description":"Material Expansion Panel","types":"typescript, html","body":["<mat-expansion-panel>","\t<mat-expansion-panel-header>","\t\t${title}","\t</mat-expansion-panel-header>","\t${content}","</mat-expansion-panel>$0"]},{"prefix":"m-stepper-vertical","description":"Material Vertical Stepper","types":"typescript, html","body":["<mat-vertical-stepper>","\t<mat-step label=\"${label1}\">","\t\t$1","\t</mat-step>","\t<mat-step label=\"${label2}\">","\t\t$2","\t</mat-step>","</mat-vertical-stepper>$0"]},{"prefix":"m-stepper-horizontal","description":"Material Horizontal Stepper","types":"typescript, html","body":["<mat-horizontal-stepper>","\t<mat-step label=\"${label1}\">","\t\t$1","\t</mat-step>","\t<mat-step label=\"${label2}\">","\t\t$2","\t</mat-step>","</mat-horizontal-stepper>$0"]},{"prefix":"m-step","description":"Material Vertical Stepper","types":"typescript, html","body":["<mat-step label=\"${label}\">","\t$1","</mat-step>","$0"]},{"prefix":"m-spinner-indeterminate","description":"Material Indeterminate Spinner","types":"typescript, html","body":["<mat-spinner","\t[mode]=\"indeterminate\">","</mat-spinner>$0"]},{"prefix":"md-toolbar","description":"Depricated Material toolbar","types":"typescript, html","body":["<md-toolbar>","\t<span>${FirstRow}</span>","</md-toolbar>$0"]},{"prefix":"md-toolbar-row","description":"Depricated Material toolbar row","types":"typescript, html","body":["<md-toolbar-row>","\t<span>${FirstRow}</span>","</md-toolbar-row>$0"]},{"prefix":"md-toolbar-multiRow","description":"Depricated Material Toolbar with multiple rows","types":"typescript, html","body":["<md-toolbar>","\t<span>${FirstRow}</span>","\t<md-toolbar-row>","\t\t<span>${SecondRow}</span>","\t</md-toolbar-row>","\t<md-toolbar-row>","\t\t<span>${ThirdRow}</span>","\t</md-toolbar-row>","</md-toolbar>$0"]},{"prefix":"md-icon-fontawesome","description":"Depricated Material Font Awesome Icon","types":"typescript, html","body":["<md-icon md-font-icon=\"fa-${icon}\" class=\"fa\"></md-icon>$0"]},{"prefix":"md-button","description":"Rectangular Material button w/ no elevation.","types":"typescript, html","body":["<button md-button>${text}</button>$0"]},{"prefix":"md-button-raised","description":"Rectangular Material button w/ elevation.","types":"typescript, html","body":["<button md-raised-button>${text}</button>$0"]},{"prefix":"md-button-icon","description":"Circular Material button with a transparent background","types":"typescript, html","body":["<button md-icon-button>%{text}</button>$0"]},{"prefix":"md-button-fab","description":"Circular button w/ elevation.","types":"typescript, html","body":["<button md-fab><md-icon>${icon_name}</md-icon></button>$0"]},{"prefix":"md-button-fab-mini","description":"Small circular button w/ elevation.","types":"typescript, html","body":["<button md-fab-mini><md-icon>${icon_name}</md-icon></button>$0"]},{"prefix":"md-button-toggle","description":"Depricated Material toggle button","types":"typescript, html","body":["<md-button-toggle>${text}</md-button-toggle>$0"]},{"prefix":"md-card","description":"Depricated Material Basic Card","types":"typescript, html","body":["<md-card>","\t$1","</md-card>$0"]},{"prefix":"md-radiobutton","description":"Depricated Material Radio Button","types":"typescript, html","body":["<md-radio-group>","\t<md-radio-button value=\"${value1}\">${Option1}</md-radio-button>","\t<md-radio-button value=\"${value2}\">${Option2}</md-radio-button>","</md-radio-group>$0"]},{"prefix":"md-radiobutton-option","description":"Depricated Material Radio Button Option","types":"typescript, html","body":["<md-radio-button value=\"${value}\">${Option}</md-radio-button>$0"]},{"prefix":"md-checkbox","description":"Depricated Material Checkbox","types":"typescript, html","body":["<md-checkbox>${text}</md-checkbox>$0"]},{"prefix":"md-datepicker","description":"Depricated Material Datepicker","types":"typescript, html","body":["<md-form-field>","\t<input mdInput [mdDatepicker]=\"${picker}\" placeholder=\"${title}\">","\t\t<button mdSuffix [mdDatepickerToggle]=\"${picker}\"></button>","\t</md-form-field>","<md-datepicker #${picker}></md-datepicker>$0"]},{"prefix":"md-input","description":"Depricated Material Input Textbox","types":"typescript, html","body":["<md-form-field>","\t<input mdInput placeholder=\"${label}\" value=\"${value}\">","</md-form-field>$0"]},{"prefix":"md-chip-list","description":"Depricated Material Chip List","types":"typescript, html","body":["<md-chip-list>","\t<md-chip>${text}<md-chip>","</md-chip-list>$0"]},{"prefix":"md-chip-list-stacked","description":"Depricated Material Chip Stacked List","types":"typescript, html","body":["<md-chip-list class=\"mat-chip-list-stacked\">","\t<md-chip>${text}<md-chip>","</md-chip-list>$0"]},{"prefix":"md-chip","description":"Depricated Material Chip","types":"typescript, html","body":["<md-chip>${text}<md-chip>$0"]},{"prefix":"md-select","description":"Depricated Material Select","types":"typescript, html","body":["<md-select placeholder=\"${Placeholder}\" [(ngModel)]=\"selectedValue\" name=\"${item}\">","\t<md-option *ngFor=\"let ${item} of ${items}\" [value]=\"${item}.value\">","\t\t{{${item}.viewValue}}","\t</md-option>","</md-select>$0"]},{"prefix":"md-icon-svg","description":"Depricated Material SVG Icon","types":"typescript, html","body":["<md-icon svgIcon=\"${src}\"></md-icon>$0"]},{"prefix":"md-slide-toggle","description":"Depricated Material Slide toggle","types":"typescript, html","body":["<md-slide-toggle>${text}</md-slide-toggle>$0"]},{"prefix":"md-slider","description":"Depricated Material Slider","types":"typescript, html","body":["<md-slider min=\"${min}\" max=\"${max}\" step=\"${step}\" value=\"${value}\"></md-slider>$0"]},{"prefix":"md-slider-vertical","description":"Depricated Material Vertical Slider","types":"typescript, html","body":["<md-slider vertical min=\"${min}\" max=\"${max}\" step=\"${step}\" value=\"${value}\"></md-slider>$0"]},{"prefix":"md-slider-thumbLabel","description":"Depricated Material Slider thumbLabel","types":"typescript, html","body":["<md-slider thumbLabel tickInterval=\"${interval}\"></md-slider>$0"]},{"prefix":"md-slider-tickInterval","description":"Depricated Material Slider tickInterval","types":"typescript, html","body":["<md-slider step=\"${step}\" tickInterval=\"${interval}\"></md-slider>$0"]},{"prefix":"md-slider-tickInterval-auto","description":"Depricated Material Slider tickInterval Auto","types":"typescript, html","body":["<md-slider tickInterval=\"auto\"></md-slider>$0"]},{"prefix":"md-list","description":"Depricated Material List","types":"typescript, html","body":["<md-list>","\t<md-list-item>${item}</md-list-item>$1","</md-list>$0"]},{"prefix":"md-list-ngfor","description":"Depricated Material List ngFor","types":"typescript, html","body":["<md-list>","\t<md-list-item *ngFor=\"let ${item} of ${items}\">{{ ${item} }}</md-list-item>$1","</md-list>$0"]},{"prefix":"md-list-item","description":"Depricated Material List Item","types":"typescript, html","body":["<md-list-item>${item}</md-list-item>$0"]},{"prefix":"md-tab-group","description":"Depricated Material Tab Group","types":"typescript, html","body":["<md-tab-group>","\t<md-tab label=\"${TabHeader1}\">$1</md-tab>","\t<md-tab label=\"${TabTabHeader2}\">$2</md-tab>","</md-tab-group>$0"]},{"prefix":"md-tab","description":"Depricated Material Tab","types":"typescript, html","body":["<md-tab label=\"${TabHeader}\">$1</md-tab>$0"]},{"prefix":"md-tooltip","description":"Depricated Material Tooltip","types":"typescript, html","body":["mdTooltip=\"${text}\"$0"]},{"prefix":"md-tooltip-position","description":"Depricated Material Tooltip position","types":"typescript, html","body":["[mdTooltipPosition]=\"${above|below|left|right|before|after}\"$0"]},{"prefix":"md-tooltip-with-position","description":"Depricated Material Tooltip with position","types":"typescript, html","body":["mdTooltip=\"${text}\" [mdTooltipPosition]=\"${above|below|left|right|before|after}\"$0"]},{"prefix":"md-table","description":"Depricated Material Table","types":"typescript, html","body":["<md-table #table [dataSource]=\"${dataSource}\">","\t<ng-container cdkColumnDef=\"${column}\">","\t\t<md-header-cell *cdkHeaderCellDef> ${header} </md-header-cell>","\t\t<md-cell *cdkCellDef=\"let row\"> {{row.${column}}} </md-cell>","\t</ng-container>","</md-table>$0"]},{"prefix":"md-table-column","description":"Depricated Material Table Column","types":"typescript, html","body":["<ng-container cdkColumnDef=\"${column}\">","\t<md-header-cell *cdkHeaderCellDef> ${header} </md-header-cell>","\t<md-cell *cdkCellDef=\"let row\"> {{row.${column}}} </md-cell>","</ng-container>$0"]},{"prefix":"md-grid-list","description":"Depricated Material Grid List","types":"typescript, html","body":["<md-grid-list cols=\"${cols}\" rowHeight=\"${height}px\">","\t<md-grid-tile","\t\t*ngFor=\"let ${tile} of ${tiles}\"","\t\t[colspan]=\"${tile}.cols\"","\t\t[rowspan]=\"${tile}.rows\"","\t\t{{${tile}.text}}","\t</md-grid-tile>","</md-grid-list>$0"]},{"prefix":"md-paginator","description":"Depricated Material Paginator","types":"typescript, html","body":["<md-paginator [length]=\"${length}\"","\t[pageSize]=\"${pageSize}\"","\t[pageSizeOptions]=\"${pageSizeOptions}\"","\t(page)=\"pageEvent = $${event}\">","</md-paginator>$0"]},{"prefix":"md-spinner","description":"Depricated Material Determinate Spinner","types":"typescript, html","body":["<md-spinner","\t[value]=\"${value}\">","</md-spinner>$0"]},{"prefix":"md-expansion-panel","description":"Depricated Material Expansion Panel","types":"typescript, html","body":["<md-expansion-panel>","\t<md-expansion-panel-header>","\t\t${title}","\t</md-expansion-panel-header>","\t${content}","</md-expansion-panel>$0"]},{"prefix":"md-stepper-vertical","description":"Depricated Material Vertical Stepper","types":"typescript, html","body":["<md-vertical-stepper>","\t<md-step label=\"${label1}\">","\t\t$1","\t</md-step>","\t<md-step label=\"${label2}\">","\t\t$2","\t</md-step>","</md-vertical-stepper>$0"]},{"prefix":"md-spinner-indeterminate","description":"Depricated Material Indeterminate Spinner","types":"typescript, html","body":["<md-spinner","\t[mode]=\"indeterminate\">","</md-spinner>$0"]}]
