{
  "Angular Component": {
    "prefix": "ng-component",
    "description": "Component with template and style urls",
    "types": "typescript,html",
    "body": [
      "import { Component, OnInit } from '@angular/core';",
      "",
      "@Component({",
      "\tselector: '${1:app}-${2:name}',",
      "\ttemplateUrl: './${2:name}.component.html',",
      "\tstyleUrls: ['./${2:name}.component.${3|scss,less,css|}']",
      "})",
      "export class ${4:Name}Component implements OnInit {",
      "\tconstructor($5) { }",
      "",
      "\tngOnInit(): void {${6: }}",
      "}",
      "$0"
    ]
  },
  "Angular Component Inline": {
    "prefix": "ng-component-inline",
    "description": "Component with inline Template and Styles",
    "types": "typescript",
    "body": [
      "import { Component, OnInit } from '@angular/core';",
      "",
      "@Component({",
      "\tselector: '${1:app}-${2:name}',",
      "\ttemplate: `${3}`,",
      "\tstyles: [`${4}`]",
      "})",
      "export class ${5:Name}Component implements OnInit {",
      "\tconstructor($6) { }",
      "",
      "\tngOnInit(): void {${7: }}",
      "}",
      "$0"
    ]
  },
  "Angular Component With NG_VALUE_ACCESSOR": {
    "prefix": "ng-component-value-accessor",
    "description": "Angular Component With NG_VALUE_ACCESSOR",
    "types": "typescript",
    "body": [
      "import { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';",
      "import { Component, Input, OnInit, forwardRef } from '@angular/core';",
      "",
      "export const ${1:COMPONENT_NAME}_VALUE_ACCESSOR: any = {",
      "\tprovide: NG_VALUE_ACCESSOR,",
      "\tuseExisting: forwardRef(() => ${2:ComponentName}Component),",
      "\tmulti: true",
      "};",
      "",
      "@Component({",
      "\tselector: '${3:selector-name}',",
      "\ttemplateUrl: './${4:name}.component.html',",
      "\tstyleUrls: ['./${4:name}.component.css'],",
      "\tproviders: [${1:COMPONENT_NAME}_VALUE_ACCESSOR]",
      "})",
      "export class ${2:ComponentName}Component implements OnInit, ControlValueAccessor {",
      "",
      "\tprivate _value: any;",
      "",
      "\tset value(value: any) {",
      "\t\tthis._value = value;",
      "\t\tthis.notifyValueChange();",
      "\t}",
      "",
      "\tget value(): any {",
      "\t\treturn this._value;",
      "\t}",
      "",
      "\tonChange: (value) => {};",
      "\tonTouched: () => {};",
      "",
      "\tconstructor() { }",
      "",
      "\tnotifyValueChange(): void {",
      "\t\tif (this.onChange) {",
      "\t\t\tthis.onChange(this.value);",
      "\t\t}",
      "\t}",
      "",
      "\tngOnInit(): void {",
      "\t\t",
      "\t}",
      "",
      "\twriteValue(obj: any): void {",
      "\t\tthis._value = obj;",
      "\t}",
      "",
      "\tregisterOnChange(fn: any): void {",
      "\t\tthis.onChange = fn;",
      "\t}",
      "",
      "\tregisterOnTouched(fn: any): void {",
      "\t\tthis.onTouched = fn;",
      "\t}",
      "",
      "\tsetDisabledState(isDisabled: boolean): void {",
      "\t}",
      "}",
      "$0"
    ]
  },
  "Angular Validator": {
    "prefix": "ng-validator",
    "description": "Angular validator snippet",
    "types": "typescript",
    "body": [
      "import { Directive } from '@angular/core';",
      "import { Validator, NG_VALIDATORS, FormControl } from '@angular/forms';",
      "",
      "@Directive({",
      "\tselector: '[${validatorName}][ngModel]',",
      "\tproviders: [",
      "\t\t{ provide: NG_VALIDATORS, useExisting: ${className}, multi: true }",
      "\t]",
      "})",
      "",
      "export class ${className} implements Validator {",
      "\tvalidate(c: FormControl): { [key: string]: any } {",
      "\t\tif (valid) {",
      "\t\t\treturn null;",
      "\t\t}",
      "",
      "\t\treturn {",
      "\t\t\t${validatorName}: {",
      "\t\t\t\tvalid: false",
      "\t\t\t}",
      "\t\t};",
      "\t}",
      "}"
    ]
  },
  "Angular Directive": {
    "prefix": "ng-directive",
    "description": "Directive template",
    "types": "typescript",
    "body": [
      "import { Directive } from '@angular/core';",
      "",
      "@Directive({",
      "\tselector: '${1:app}-${2:Name}',",
      "})",
      "export class ${2:Name}Directive {${3: }}$0"
    ]
  },
  "Angular CSS Directive": {
    "prefix": "ng-directive-css",
    "description": "CSS directive",
    "types": "typescript",
    "body": [
      "import { Directive, ElementRef, Input } from '@angular/core';",
      "",
      "@Directive({",
      "\tselector: '[${1:app}-${2:Name}]',",
      "})",
      "export class ${2:Name}Directive {",
      "\tconstructor(private elementRef: ElementRef) {}",
      "",
      "\tprivate ${3:name}(${4:value}: string) {",
      "\t\tthis.elementRef.nativeElement.style.${5:proptery} = ${6:value};",
      "\t}",
      "}$0"
    ]
  },
  "Angular Attribute Directive": {
    "prefix": "ng-directive-attribute",
    "description": "Attribute directive",
    "types": "typescript",
    "body": [
      "import { Directive } from '@angular/core';",
      "",
      "@Directive({",
      "\tselector: '[${1:app}-${2:Name}]',",
      "})",
      "export class ${2:Name}Directive {${4: }}$0"
    ]
  }
}
